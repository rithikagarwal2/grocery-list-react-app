{"version":3,"sources":["Table.js","App.js","index.js"],"names":["Table","props","item","id","onClick","onSelect2","index","onSelect","App","useState","list","setlist","setItemName","qty","setItemQty","Delete","oldlist","filter","element","idx","setinput","itemname","qnt","forEach","className","type","name","onChange","e","target","value","insert","undefined","find","parseInt","alert","console","log","length","i","temp","border","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.adce96f7.chunk.js","sourcesContent":["import React from 'react';\n\nconst Table =(props)=>{\n    return(\n    <>\n    <tr>\n        <td>{props.item[0]}</td>\n        <td>{props.item[1]}</td>\n        <td><button id=\"edit_btn\" onClick={()=>{\n            props.onSelect2(props.index);\n        }}>edit</button></td>\n        <td><button id=\"del_btn\" onClick={()=>{\n            props.onSelect(props.index);\n        }}> Delete</button></td>\n\n    </tr>\n    </>\n    );\n}\nexport default Table;","import React, { useState } from 'react'\nimport Table from './Table';\n\nfunction App() {\n  const [list,setlist]= useState([]);\n  const [item,setItemName]= useState(\"\");\n  const [qty,setItemQty]= useState(0);\n  \n  //Editing value\n  const edit=()=>{\n    \n    var found= list.find((element)=>{\n       return element[0]==item;\n    })\n   if(found==undefined){\n     alert(\"Enter-correct Item name to edit\");\n   }\n   else{\n    if(parseInt(qty)<=0){\n      alert(\"Please Enter valid Quantity\");\n    }\n    else{\n    for(var i=0;i<list.length;i++){\n        if(list[i][0]==item){\n          list[i][1]= parseInt(qty);\n        }\n    }\n    setlist((oldlist)=>{\n      return oldlist.filter((element,idx)=>{\n        return idx!==-1;\n      })\n    });\n  }\n   }\n   \n\n  }\n\n  //setting Item name\n  const settingName=(e)=>{\n     setItemName(e.target.value);\n  }\n\n  //Setting Quantity\n  const settingQuantity= (e)=>{\n    setItemQty(e.target.value);\n  }\n\n //Adding Values to list\n  const add =()=>{\n    var insert=false;\n    var found= list.find((element)=>{\n       return element[0]==item;\n    })\n   if(found===undefined){\n     insert = true;\n   }\n\n   if(!insert){\n     if(parseInt(qty)<=0){\n       alert(\"Please Enter valid Quantity\");\n     }\n     else{\n     console.log(list.length);\n    for(var i=0;i<list.length;i++){\n      if(list[i][0]==item){\n        var temp= parseInt(list[i][1]);\n        temp+=parseInt(qty);\n        list[i][1]=temp;\n      }\n    }\n    setlist((oldlist)=>{\n      return oldlist.filter((element,idx)=>{\n        return idx!==-1;\n      })\n    });\n  }\n   }\n   else{\n    if(parseInt(qty)<=0){\n      alert(\"Please Enter valid Quantity\");\n    }\n    else{\n    setlist((oldlist)=>{\n      return [...oldlist,[item,qty]];\n    });\n  }\n  }\n    console.log(list);\n  }\n\n  //Deleting values from list\n\n  const Delete= (id)=>{\n      \n   \n    \n    setlist((oldlist)=>{\n      return oldlist.filter((element,idx)=>{\n        return idx!==id;\n      })\n    });\n  \n  }\n\n  //Setting input fields\n  const setinput= (id)=>{\n    var itemname,qnt;\n    \n    list.forEach((element,idx)=>{\n        if(idx==id){\n          itemname= element[0];\n          qnt=element[1];\n        }\n    });\n    \n  setItemQty(qnt);\n  setItemName(itemname);\n  \n\n  }\n\n  return (\n    <>\n     <div className=\"container\">\n      <div className=\"tab tab-2\" id=\"maindiv\">\n        <div id=\"inner-div\">\n          <h1>Add Items</h1>\n          Item:<input type=\"text\" name=\"item\" id=\"item\" onChange={settingName} value={item}/>\n\n          Quantity:<input type=\"number\" name=\"qty\" id=\"qty\" onChange={settingQuantity} value={qty} />\n\n          <button id=\"add\" onClick={add}>\n            Add\n          </button>\n          <button id=\"edit\" onClick={edit}>\n            Edit\n          </button>\n        </div>\n      </div>\n      <div className=\"tab tab-1\">\n        <h1 id=\"title\">Grocery-List</h1>\n        <table id=\"table\" border=\"1\">\n          <tr>\n            <th className=\"tc\">Item</th>\n\n            <th className=\"tc\">quantity</th>\n            <th className=\"tc\">Edit</th>\n            <th className=\"tc\">Delete</th>\n          </tr>\n          {list.map((element,id)=>{\n            return(\n            <Table\n            key={id}\n            index={id}\n            item={element}\n            onSelect={Delete}\n            onSelect2={setinput}\n            />\n            );\n          })}\n        </table>\n      </div>\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}